{"version":3,"sources":["components/Navbar.js","components/HeroSection.js","components/Footer.js","assets/inception-spinning.png","assets/TMDB-logo.svg","components/About.js","firebase.js","components/Catalogo.js","components/Filme.js","App.js","index.js"],"names":["Navbar","React","useState","width","menuStyle","setMenuStyle","className","exact","to","id","style","onClick","HeroSection","query","setQuery","setMovies","handleSubmit","e","a","preventDefault","console","log","url","fetch","res","json","data","results","error","onSubmit","placeholder","value","onChange","target","Footer","About","src","TMDBLogo","alt","inceptionImg","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","Catalogo","movieList","setMovieList","ref","firestore","collection","getLetterArray","items","letter","filter","item","titulo","slice","map","ano","useEffect","onSnapshot","querySnapshot","forEach","doc","push","Filme","props","movieInfo","setMovieInfo","direction","setDirection","streamers","setStreamers","spoilersDB","setspoilersDB","filmeID","useParams","getMovie","getDirector","directorsArray","crew","job","directorsName","index","length","name","getStreaming","streamersArray","BR","flatrate","BRStream","provider_name","DBinfo","undefined","spoilers","setFilmeID","spoilersArray","pergunta","text","key","poster_path","title","release_date","tagline","original_title","overview","App","basename","path","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c76523c8.chunk.js","sourcesContent":["import React from 'react'\r\nimport { Link } from \"react-router-dom\"\r\n\r\nexport default function Navbar() {\r\n  const [menuStyle, setMenuStyle] = React.useState({\r\n    width: '0'\r\n  })\r\n\r\n  return (\r\n    <nav className=\"Navbar\">\r\n      <div className='leftSide'>\r\n        <Link exact={true} to=\"/\">Spoiler Zone</Link>\r\n      </div>\r\n      <div className='rightSide'>\r\n        <Link to=\"/catalogo\">Catálogo de filmes</Link>\r\n        <Link to=\"/sobre\">Sobre o site</Link>\r\n      </div>\r\n      <div id=\"mySidenav\" className=\"sidenav\" style={menuStyle}>\r\n        <button className=\"closebtn\" onClick={() => setMenuStyle({width: '0'})}>&times;</button>\r\n        <Link to=\"/catalogo\">Catálogo de filmes</Link>\r\n        <Link to=\"/sobre\">Sobre o site</Link>\r\n      </div>\r\n      <i className=\"fas fa-bars fa-2x\" onClick={() => setMenuStyle({width: '250px'})}></i>\r\n    </nav>\r\n  );\r\n}","import React from 'react'\r\n\r\nexport default function HeroSection({ query, setQuery, setMovies }) {\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    console.log(\"submitting\");\r\n    \r\n    const url = `https://api.themoviedb.org/3/search/movie?api_key=53d1ed1dbd54c7022b78b3f3b8a42342&language=pt-BR&query=${query}&page=1&include_adult=false`;\r\n    \r\n    try {\r\n      const res = await fetch(url);\r\n      const data  = await res.json();\r\n      console.log(data.results);\r\n      setMovies(data.results);\r\n    } catch(err) {\r\n      console.error(err);\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className=\"HeroSection\">\r\n      <div className=\"hero-image\">\r\n        <div className=\"hero-text\">\r\n          <p>A VIDA É MUITO CURTA</p>\r\n          <p>PARA ESPERAR O FINAL</p>\r\n          <p>DO FILME</p>\r\n          <form onSubmit={handleSubmit}>\r\n            <input placeholder={/**'Pesquise um filme'*/ 'Função pesquisar ainda em construção'} value={query} onChange={e => setQuery(e.target.value)}></input>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}","import React from 'react'\r\n\r\nexport default function Footer() {\r\n  return (\r\n    <footer>\r\n      <p>Almir Leandro &#169; 2021</p>\r\n    </footer>\r\n  )\r\n}","export default __webpack_public_path__ + \"static/media/inception-spinning.e5e59a80.png\";","export default __webpack_public_path__ + \"static/media/TMDB-logo.bf7f470b.svg\";","import React from 'react'\r\nimport inceptionImg from '../assets/inception-spinning.png'\r\nimport TMDBLogo from '../assets/TMDB-logo.svg'\r\n\r\nexport default function About() {\r\n  return (\r\n    <main className='About'>\r\n      <div className='leftSide'>\r\n        <h1>SOBRE O SITE</h1>\r\n        <p>Excepturi ut accusamus id. In est consequatur et nobis. Sit perferendis voluptates est.</p><br/>\r\n        <p>Odit sed eaque quidem sint rerum aut. Dicta non ex ratione minus. Quod voluptatem assumenda quia vitae id provident repellat est. Rerum pariatur deserunt pariatur eligendi accusamus vitae. Voluptas possimus voluptate nobis ex nihil adipisci omnis. Quos debitis deleniti optio harum fuga voluptatem et nesciunt.</p><br/>\r\n        <p>Eum error eius similique. Nisi id odio aut corrupti ut asperiores dolor. Quia vel et harum. Quis omnis occaecati alias id dolorum optio. Cupiditate id eos quo quia ab.</p><br/><br/>\r\n        <p id='attribution'>Todos os posters, sinopses e informações técnicas dos filmes neste site utilizam o banco de dados do The Movie Databse como fonte.</p><br/>\r\n        <img id='TMDBLogo' src={TMDBLogo} alt='The Movie Database Logo'></img>\r\n      </div>\r\n      <div className='rightSide'>\r\n        <img src={inceptionImg} alt='Spoiler de Inception'/>\r\n      </div>\r\n    </main>\r\n  )\r\n}","// Your web app's Firebase configuration\r\nimport firebase from \"firebase/app\";\r\nimport \"firebase/firestore\"\r\n\r\nconst firebaseConfig = {\r\n  apiKey: \"AIzaSyCK9kyzWbX0DkL3lSaYysc6QIFy5QrR2xw\",\r\n  authDomain: \"moviespoilersdb.firebaseapp.com\",\r\n  projectId: \"moviespoilersdb\",\r\n  storageBucket: \"moviespoilersdb.appspot.com\",\r\n  messagingSenderId: \"430921595614\",\r\n  appId: \"1:430921595614:web:afe11c5fe403a076e4e04f\"\r\n};\r\n// Initialize Firebase\r\nfirebase.initializeApp(firebaseConfig);\r\nexport default firebase;","import React, { useState, useEffect } from 'react';\r\nimport { Link } from \"react-router-dom\";\r\nimport firebase from '../firebase';\r\n\r\nexport default function Catalogo() {\r\n\r\n  const [movieList, setMovieList] = useState([]);\r\n\r\n  const ref = firebase.firestore().collection(\"moviespoilersdb\");\r\n  const getMovieList = () => {\r\n    ref.onSnapshot((querySnapshot) => {\r\n      const items = [];\r\n      querySnapshot.forEach((doc) => {\r\n          items.push(doc.data());\r\n      });\r\n\r\n      setMovieList(items);\r\n\r\n    });\r\n  };\r\n\r\n  \r\n  useEffect(() => {\r\n    getMovieList();\r\n  }, []);\r\n  \r\n  \r\n  function getLetterArray(items, letter) {\r\n    const getLetter = items.filter(item => item.titulo.slice(0,1) === letter);\r\n    const letterArray = getLetter.map(item => {\r\n      return <p key={item.id} className='movieLink'><Link to={`filme/${item.id}`}>{item.titulo} ({item.ano})</Link></p>\r\n    })\r\n    return letterArray;\r\n  }\r\n\r\n\r\n  return (\r\n    <main className='Catalogo'>\r\n      <h1>CATÁLOGO DE FILMES</h1>\r\n      {movieList[0] ? <div>\r\n        <p className='letterDiv'>A</p>\r\n        {getLetterArray(movieList, 'A')}\r\n        <p className='letterDiv'>B</p>\r\n        {getLetterArray(movieList, 'B')}\r\n        <p className='letterDiv'>C</p>\r\n        {getLetterArray(movieList, 'C')}\r\n        <p className='letterDiv'>D</p>\r\n        {getLetterArray(movieList, 'D')}\r\n        <p className='letterDiv'>E</p>\r\n        {getLetterArray(movieList, 'E')}\r\n        <p className='letterDiv'>F</p>\r\n        {getLetterArray(movieList, 'F')}\r\n        <p className='letterDiv'>G</p>\r\n        {getLetterArray(movieList, 'G')}\r\n        <p className='letterDiv'>H</p>\r\n        {getLetterArray(movieList, 'H')}\r\n        <p className='letterDiv'>I</p>\r\n        {getLetterArray(movieList, 'I')}\r\n        <p className='letterDiv'>J</p>\r\n        {getLetterArray(movieList, 'J')}\r\n        <p className='letterDiv'>K</p>\r\n        {getLetterArray(movieList, 'K')}\r\n        <p className='letterDiv'>L</p>\r\n        {getLetterArray(movieList, 'L')}\r\n        <p className='letterDiv'>M</p>\r\n        {getLetterArray(movieList, 'M')}\r\n        <p className='letterDiv'>N</p>\r\n        {getLetterArray(movieList, 'N')}\r\n        <p className='letterDiv'>O</p>\r\n        {getLetterArray(movieList, 'O')}\r\n        <p className='letterDiv'>P</p>\r\n        {getLetterArray(movieList, 'P')}\r\n        <p className='letterDiv'>Q</p>\r\n        {getLetterArray(movieList, 'Q')}\r\n        <p className='letterDiv'>R</p>\r\n        {getLetterArray(movieList, 'R')}\r\n        <p className='letterDiv'>S</p>\r\n        {getLetterArray(movieList, 'S')}\r\n        <p className='letterDiv'>T</p>\r\n        {getLetterArray(movieList, 'T')}\r\n        <p className='letterDiv'>U</p>\r\n        {getLetterArray(movieList, 'U')}\r\n        <p className='letterDiv'>V</p>\r\n        {getLetterArray(movieList, 'V')}\r\n        <p className='letterDiv'>W</p>\r\n        {getLetterArray(movieList, 'W')}\r\n        <p className='letterDiv'>X</p>\r\n        {getLetterArray(movieList, 'X')}\r\n        <p className='letterDiv'>Y</p>\r\n        {getLetterArray(movieList, 'Y')}\r\n        <p className='letterDiv'>Z</p>\r\n        {getLetterArray(movieList, 'Z')}\r\n      </div> : <p className='letterDiv'>Carregando filmes...</p>}\r\n    </main>\r\n  )\r\n}","import React, { useState, useEffect } from 'react';\r\nimport { useParams } from \"react-router-dom\";\r\nimport firebase from '../firebase';\r\n\r\nexport default function Filme(props) {\r\n  const [movieInfo, setMovieInfo] = useState();\r\n  const [direction, setDirection] = useState();\r\n  const [streamers, setStreamers] = useState();\r\n  const [spoilersDB, setspoilersDB] = useState([]);\r\n\r\n  // Get url path\r\n  const { id } = useParams();\r\n  const filmeID = id;\r\n  \r\n  // Get spoilers from database\r\n  const ref = firebase.firestore().collection(\"moviespoilersdb\");\r\n  const getSpoilers = () => {\r\n    ref.onSnapshot((querySnapshot) => {\r\n      const items = [];\r\n      querySnapshot.forEach((doc) => {\r\n          items.push(doc.data());\r\n      });\r\n      \r\n      const DBinfo = items.filter(item => item.id === filmeID);\r\n\r\n      if (DBinfo[0] === undefined) { // Tentar lembrar por que eu coloquei esse if aqui (lembrei: foi para poder exibir páginas que ainda não têm spoilers (ainda dá para melhorar))\r\n        console.log('Filme não contém spoilers no banco de dados');\r\n      } else {\r\n        setspoilersDB(DBinfo[0].spoilers);\r\n      }\r\n    });\r\n  }\r\n\r\n  // API calls\r\n  const getMovie = async () => {    \r\n    const url = `https://api.themoviedb.org/3/movie/${filmeID}?api_key=53d1ed1dbd54c7022b78b3f3b8a42342&language=pt-BR`;\r\n    \r\n    try {\r\n      const res = await fetch(url);\r\n      const data  = await res.json();\r\n      setMovieInfo(data);\r\n      // console.log(data);\r\n    }catch(err){\r\n      console.error(err);\r\n    }\r\n  }\r\n  const getDirector = async () => {    \r\n    const url = `https://api.themoviedb.org/3/movie/${filmeID}/credits?api_key=53d1ed1dbd54c7022b78b3f3b8a42342&language=en-US`;\r\n    \r\n    try {\r\n      const res = await fetch(url);\r\n      const data  = await res.json();\r\n\r\n      const directorsArray = data.crew.filter(item => item.job === 'Director');\r\n      const directorsName = directorsArray.map((item, index) => {\r\n        if (directorsArray.length > 1 && index + 1 === directorsArray.length) {\r\n          return 'e ' + item.name;\r\n        } else if (index + 1 === directorsArray.length - 1) {\r\n          return item.name + ' ';\r\n        } else if (index + 1 < directorsArray.length) {\r\n          return item.name + ', ';\r\n        } else {\r\n          return item.name;\r\n        }\r\n      });\r\n\r\n      setDirection(directorsName);\r\n      // console.log(directorsName);\r\n    }catch(err){\r\n      console.error(err);\r\n    }\r\n  }\r\n  const getStreaming = async () => {    \r\n    const url = `https://api.themoviedb.org/3/movie/${filmeID}/watch/providers?api_key=53d1ed1dbd54c7022b78b3f3b8a42342`;\r\n    \r\n    try {\r\n      const res = await fetch(url);\r\n      const data  = await res.json();\r\n\r\n      const streamersArray = data.results.BR.flatrate;\r\n      const BRStream = streamersArray.map((item, index) => {\r\n        if (streamersArray.length > 1 && index + 1 === streamersArray.length) {\r\n          return 'e ' + item.provider_name;\r\n        } else if (index + 1 === streamersArray.length - 1) {\r\n          return item.provider_name + ' ';\r\n        } else if (index + 1 < streamersArray.length) {\r\n          return item.provider_name + ', ';\r\n        } else {\r\n          return item.provider_name;\r\n        }\r\n      });\r\n\r\n      setStreamers(BRStream);\r\n      // console.log(BRStream);\r\n    }catch(err){\r\n      console.error(err);\r\n    }\r\n  }\r\n\r\n  // Call them any time the url changes (and at first render)\r\n  useEffect(() => {\r\n    getMovie();\r\n    getDirector();\r\n    getStreaming();\r\n    getSpoilers();\r\n    props.setFilmeID(filmeID);\r\n  }, [filmeID]);\r\n\r\n  // Put the spoiler in a JSX format\r\n  const spoilersArray = spoilersDB.map(item => {\r\n    return <p key={item.key}><b>{item.pergunta}</b> {item.text}</p>\r\n  });\r\n\r\n  return (\r\n    <main className='Filme'>\r\n      {movieInfo ? <div className='movieHeader'>\r\n        <img src={'https://image.tmdb.org/t/p/w342' + movieInfo.poster_path} alt={spoilersDB.titulo}/>\r\n        <div className='movieDescription'>\r\n          <h1>{movieInfo.title} ({movieInfo.release_date.slice(0,4)})</h1>\r\n          {movieInfo.tagline ? <p id='tagline'><em>\"{movieInfo.tagline}\"</em></p> : null}\r\n          <p><b>Título original:</b> {movieInfo.original_title}</p>\r\n          <p><b>Direção:</b> {direction}</p>\r\n          <p><b>Sinopse:</b> {movieInfo.overview ? movieInfo.overview : 'Não disponível'}</p>\r\n          <p><b>Disponível para streaming no Brasil em:</b> {streamers ? streamers : 'Não disponível'}</p>\r\n        </div>\r\n      </div> : null}\r\n      <div className='spoilerDivision'>Spoilers a seguir</div>\r\n      <div className='spoilers'>\r\n        {spoilersArray}\r\n      </div>\r\n    </main>\r\n  )\r\n}","import React, { useState } from 'react'\n\nimport Navbar from './components/Navbar'\nimport HeroSection from './components/HeroSection'\nimport Footer from './components/Footer'\n\nimport About from './components/About'\nimport Catalogo from './components/Catalogo'\nimport Filme from './components/Filme'\n\nimport {\n  Switch,\n  Route,\n  HashRouter\n} from \"react-router-dom\"\n\nexport default function App() {\n  const [query, setQuery] = useState('');\n  const [movies, setMovies] = useState([]);\n  const [filmeID, setFilmeID] = useState('');\n\n  return (\n    <HashRouter basename='/'>\n      <div className=\"App\">\n        <Switch>\n\n          <Route path='/' exact>\n            <Navbar />\n            <HeroSection query={query} setQuery={setQuery} setMovies={setMovies} />\n            <Footer />\n          </Route>\n\n          <Route path='/catalogo'>\n            <Navbar />\n            <Catalogo />\n            <Footer />\n          </Route>\n\n          <Route path='/sobre'>\n            <Navbar />\n            <About />\n            <Footer />\n          </Route>\n\n          <Route path={`/filme/:id`}>\n            <Navbar />\n            <Filme setFilmeID={setFilmeID} />\n            <Footer />\n          </Route>\n\n        </Switch>\n      </div>\n    </HashRouter>\n  );\n}\n\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}